---
lookup_options:
  profile::users::ldap::users:
    merge: 'deep'
  profile::users::local::users:
    merge: 'deep'
  jupyterhub::jupyterhub_config_hash:
    merge: 'deep'

consul_template::version: 0.25.2
consul::version: 1.9.5
consul_template::config_hash:
  consul:
    token: "%{hiera('profile::consul::acl_api_token')}"

epel::epel_exclude: 'slurm* singularity'

fail2ban::config_file_template: "fail2ban/CentOS/%{facts.os.release.major}/etc/fail2ban/jail.conf.epp"
fail2ban::package_name: fail2ban-server
fail2ban::jails: ['ssh-route', 'ssh-ban-root']
fail2ban::custom_jails:
  'ssh-route':
    enabled: true
    filter: 'sshd'
    findtime: 3600
    bantime: 86400
    maxretry: 20
    action: 'route'
    logpath: '%(sshd_log)s'
  'ssh-ban-root':
    enabled: true
    findtime: 3600
    bantime: 86400
    maxretry: 0
    action: 'route'
    logpath: '%(sshd_log)s'
    journalmatch: '_SYSTEMD_UNIT=sshd.service + _COMM=sshd'
    filter_maxlines: 10
    filter_includes: 'before = common.conf'
    filter_failregex: '^%(__prefix_line)spam_unix\(sshd:auth\):\s+authentication failure;\s*logname=\S*\s*uid=\d*\s*euid=\d*\s*tty=\S*\s*ruser=\S*\s*rhost=<HOST>\S*\s*user=(root|admin)\s.*$'

jupyterhub::kernel::setup: venv
jupyterhub::jupyterhub_config_hash:
  SlurmFormSpawner:
    ui_args:
      notebook:
        name: Jupyter Notebook
        args: ['--SingleUserNotebookApp.default_url=/tree']
      lab:
        name: JupyterLab
      terminal:
        name: Terminal
        args: ['--SingleUserNotebookApp.default_url=/terminals/1']
      rstudio:
        name: RStudio
        args: ['--SingleUserNotebookApp.default_url=/rstudio']
      code-server:
        name: VS Code
        args: ['--SingleUserNotebookApp.default_url=/code-server']
      desktop:
        name: Desktop
        args: ['--SingleUserNotebookApp.default_url=/Desktop']

  SbatchForm:
    ui:
      choices: ['notebook', 'lab', 'terminal', 'code-server', 'desktop']
      def: 'lab'

selinux::mode: 'permissive'
# selinux::type: 'targeted'

squid::cache_mem: "256 MB"
squid::extra_config_sections:
  general:
    config_entries:
      maximum_object_size: "131072 KB"

profile::base::version: 12.0.0

profile::squid::server::port: 3128
profile::squid::server::cache_size: 4096

profile::cvmfs::client::quota_limit: 4096

profile::mfa::mgmt::provider: 'none'
profile::mfa::node::provider: 'none'
profile::mfa::login::provider: 'none'

profile::freeipa::mokey::port: 12345
profile::freeipa::mokey::enable_user_signup: true
profile::freeipa::mokey::require_verify_admin: true

profile::reverse_proxy::jupyterhub_subdomain: jupyter
profile::reverse_proxy::ipa_subdomain: ipa
profile::reverse_proxy::mokey_subdomain: mokey

profile::slurm::base::slurm_version: '21.08'
profile::slurm::base::os_reserved_memory: 512
profile::slurm::controller::autoscale_version: '0.2.3'

prometheus::storage_retention: '48h'
prometheus::storage_retention_size: '5GB'

profile::accounts::project_regex: '(ctb|def|rpp|rrg)-[a-z0-9_-]*'
profile::users::ldap::users:
  'user':
    count: "%{alias('terraform.data.nb_users')}"
    passwd: "%{alias('terraform.data.guest_passwd')}"
    groups: ['def-sponsor00']

profile::users::local::users:
  "%{alias('terraform.data.sudoer_username')}":
    public_keys: "%{alias('terraform.data.public_keys')}"
    groups: ['adm', 'wheel', 'systemd-journal', 'def-sponsor00']
    sudoer: true


profile::consul::acl_api_token: "%{alias('terraform.data.consul_token')}"

profile::freeipa::base::admin_passwd: "%{alias('terraform.data.freeipa_passwd')}"
profile::freeipa::base::domain_name: "%{alias('terraform.data.domain_name')}"
profile::freeipa::mokey::passwd: "%{alias('terraform.data.freeipa_passwd')}"

profile::slurm::base::cluster_name: "%{alias('terraform.data.cluster_name')}"
profile::slurm::base::munge_key: "%{alias('terraform.data.munge_key')}"
profile::slurm::accounting::password: "%{alias('terraform.data.freeipa_passwd')}"

profile::freeipa::client::server_ip: "%{alias('terraform.tag_ip.mgmt.0')}"
profile::consul::client::server_ip: "%{alias('terraform.tag_ip.puppet.0')}"
profile::nfs::client::server_ip: "%{alias('terraform.tag_ip.nfs.0')}"

profile::nfs::server::devices: "%{alias('terraform.volumes.nfs')}"

profile::reverse_proxy::domain_name: "%{alias('terraform.data.domain_name')}"
