from pathlib import Path
from django.utils.translation import gettext_lazy as _
import os
import logging.config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '<%= $secret_key %>'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']
CSRF_TRUSTED_ORIGINS = ['portal.<%= $domain_name %>']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'freeipa_auth',
    'watchman',

    'pages',
    'slurm',
    'notes',

    'jobstats',
    'top',

    # system modules
    'rest_framework',
    'rest_framework.authtoken',
    'bootstrap_pagination',
]

MIDDLEWARE = []
if DEBUG:
    INSTALLED_APPS += ['debug_toolbar']
    MIDDLEWARE = ['debug_toolbar.middleware.DebugToolbarMiddleware']

MIDDLEWARE += [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.RemoteUserMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'djangosaml2.middleware.SamlSessionMiddleware',
]

ROOT_URLCONF = 'userportal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django_settings_export.settings_export',
                'django.template.context_processors.request',
            ],
        },
    },
]

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

WSGI_APPLICATION = 'userportal.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'userportal',
        'USER': 'userportal',
        'PASSWORD': '<%= $password %>',
        'HOST': 'localhost',
        'PORT': '3306',
    },
    'slurm': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'slurm_acct_db',
        'USER': 'slurm',
        'PASSWORD': '<%= $password %>',
        'HOST': 'localhost',
        'PORT': '3306',
    },
}

WATCHMAN_DATABASES = ['default', 'slurm']

DATABASE_ROUTERS = ['database_routers.dbrouters.DbRouter']

PROMETHEUS = {
    'url': 'http://localhost:9090',
    'headers': {},
    'filter': "",
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LANGUAGES = [
    ('fr', _('French')),
    ('en', _('English')),
]

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

STATIC_URL = '/static/'
STATIC_ROOT = '/var/www/userportal-static/'

AUTHENTICATION_BACKENDS = [
    'userportal.authentication.staffRemoteUserBackend',
    'django.contrib.auth.backends.ModelBackend',
    'freeipa_auth.backends.FreeIpaRpcAuthBackend',
    ]

FREEIPA_AUTH_BACKEND_ENABLED = True
FREEIPA_AUTH_SERVER = "mgmt1.int.<%= $domain_name %>"
FREEIPA_AUTH_SSL_VERIFY = '/etc/pki/tls/certs/ca-bundle.crt'
FREEIPA_AUTH_UPDATE_USER_GROUPS = True
FREEIPA_AUTH_ALWAYS_UPDATE_USER = True
FREEIPA_AUTH_USER_ATTRS_MAP = {"first_name": "givenname", "last_name": "sn", "email": "mail"}
FREEIPA_AUTH_SERVER_TIMEOUT = 5
FREEIPA_AUTH_STAFF_GROUPS = ['admins']

LOGIN_REDIRECT_URL = '/'

EXPORTER_INSTALLED = [
    'slurm-job-exporter',
    'node_exporter',
    'slurm_exporter',
]

CLUSTER_NAME = '<%= $cluster_name %>'  # used for slurm DB name
LUSTRE_FS_NAMES = None
LOGINS = {
    'login1': {
        'network_interface': 'eth0',
    },
}
DTNS = None

AMORTIZATION_YEARS = None
CPU_CORE_COST_PER_HOUR = None
GPU_COST_PER_HOUR = None

ELECTRICITY_COST_PER_KWH = None
COOLING_COST_PER_KWH = None
CO2_KG_PER_MWH = None
ELECTRIC_CAR_RANGE_KM_PER_KWH = None

CLOUD_CPU_CORE_COST_PER_HOUR = None
CLOUD_GPU_COST_PER_HOUR = None

# Used to set reasonable thresholds for the mem usage in the "top compute" page
NORMAL_MEM_BY_CORE = 256/64 * 1024 * 1024 * 1024  # 256GB for 64 cores
NORMAL_MEM_BY_GPU = 512 / 4 * 1024 * 1024 * 1024  # 512GB for 4 GPUs
NORMAL_CORES_BY_GPU = 48 / 4  # 48 cores for 4 GPUs

SLURM_TRES = {
    '1001=': 'NVIDIA A100-SXM4-40GB',
}

CLUSTER_NAME_TITLE = '<%= $cluster_name %>'
FAVICON = 'https://object-arbutus.cloud.computecanada.ca/userportal-public/mc.png'

CLUSTER_INTRO = """
<p><%= $cluster_name %>'s cluster</p>
"""

SETTINGS_EXPORT = [
    'CLUSTER_NAME_TITLE',
    'FAVICON',
    'CLUSTER_INTRO',
    'EXPORTER_INSTALLED',
    'INSTALLED_APPS',
    'LOGINS',
    'DTNS',
    'CLOUD_CPU_CORE_COST_PER_HOUR',
    'CLOUD_GPU_COST_PER_HOUR',
    'ELECTRICITY_COST_PER_KWH',
    'ELECTRIC_CAR_RANGE_KM_PER_KWH',
    'CO2_KG_PER_MWH',
    'AMORTIZATION_YEARS',
    'CPU_CORE_COST_PER_HOUR',
    'GPU_COST_PER_HOUR',
]

INTERNAL_IPS = [
    '127.0.0.1',
]

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAdminUser',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
        'rest_framework_datatables.renderers.DatatablesRenderer',
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework_datatables.filters.DatatablesFilterBackend',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework_datatables.pagination.DatatablesPageNumberPagination',
    'PAGE_SIZE': 100,
}
